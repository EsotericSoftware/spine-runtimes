cmake_minimum_required(VERSION 3.17)
project(spine)

if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
  set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install CACHE PATH "Install location" FORCE)
endif()

set(CMAKE_VERBOSE_MAKEFILE ON)
set(SPINE_SFML FALSE CACHE BOOL FALSE)
set(SPINE_SANITIZE FALSE CACHE BOOL FALSE)

if(MSVC)
	message("MSCV detected")
	set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
	set (CMAKE_C_FLAGS "${CMAKE_CXX_FLAGS}")
else()
	set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wunused-value -Wno-variadic-macros -Wextra -pedantic -Wshadow -std=c89")
	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wunused-value -Wno-variadic-macros -Wextra -Wnon-virtual-dtor -pedantic -Wshadow -std=c++11 -fno-exceptions -fno-rtti")

	if (${SPINE_SANITIZE})
		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fsanitize=address -fsanitize=undefined")
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address -fsanitize=undefined")
	endif()
endif()

if((${SPINE_SFML}) OR (${CMAKE_CURRENT_BINARY_DIR} MATCHES "spine-sfml"))
	if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
		set(CMAKE_OSX_ARCHITECTURES x86_64)
		set(ONLY_ACTIVE_ARCH NO)
	endif()
	add_subdirectory(spine-c)
	add_subdirectory(spine-cpp)
	add_subdirectory(spine-sfml/c)
	add_subdirectory(spine-sfml/cpp)
elseif((${SPINE_SDL}) OR (${CMAKE_CURRENT_BINARY_DIR} MATCHES "spine-sdl"))
	if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
		set(CMAKE_OSX_ARCHITECTURES x86_64;arm64)
		set(ONLY_ACTIVE_ARCH NO)
	endif()
	add_subdirectory(spine-c)
	add_subdirectory(spine-cpp)
	add_subdirectory(spine-sdl)
else()
	add_subdirectory(spine-c)
	add_subdirectory(spine-cpp)
	add_subdirectory(spine-cpp/spine-cpp-unit-tests)
endif()